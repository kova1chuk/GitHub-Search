{"ast":null,"code":"var GIT_SEARCH_CACHE = \"gitSearchCache\";\nexport default {\n  writeTo: function writeTo(searchRequest) {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) localStorage[GIT_SEARCH_CACHE] = JSON.stringify(searchRequest);\n      var store = new Set(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      store.add(searchRequest);\n      localStorage[GIT_SEARCH_CACHE] = JSON.stringify(Array.from(store));\n    }\n  },\n  searchIn: function searchIn(searchRequest) {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) {\n        localStorage[GIT_SEARCH_CACHE] = \"\";\n        return [];\n      }\n\n      var store = new Set(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      var result = Array.from(store).filter(function (item) {\n        return item.search(searchRequest) !== -1;\n      });\n      return result;\n    }\n  }\n};","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/utils/searchCache.ts"],"names":["GIT_SEARCH_CACHE","writeTo","searchRequest","localStorage","JSON","stringify","store","Set","parse","add","Array","from","searchIn","result","filter","item","search"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,gBAAzB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE,iBAACC,aAAD,EAA2B;AAClC,QAAIC,YAAJ,EAAkB;AAChB,UAAI,CAACA,YAAY,CAACH,gBAAD,CAAjB,EACEG,YAAY,CAACH,gBAAD,CAAZ,GAAiCI,IAAI,CAACC,SAAL,CAAeH,aAAf,CAAjC;AAEF,UAAMI,KAAK,GAAG,IAAIC,GAAJ,CAAgBH,IAAI,CAACI,KAAL,CAAWL,YAAY,CAACH,gBAAD,CAAvB,CAAhB,CAAd;AACAM,MAAAA,KAAK,CAACG,GAAN,CAAUP,aAAV;AACAC,MAAAA,YAAY,CAACH,gBAAD,CAAZ,GAAiCI,IAAI,CAACC,SAAL,CAAeK,KAAK,CAACC,IAAN,CAAWL,KAAX,CAAf,CAAjC;AACD;AACF,GAVY;AAWbM,EAAAA,QAAQ,EAAE,kBAACV,aAAD,EAA2B;AACnC,QAAIC,YAAJ,EAAkB;AAChB,UAAI,CAACA,YAAY,CAACH,gBAAD,CAAjB,EAAqC;AACnCG,QAAAA,YAAY,CAACH,gBAAD,CAAZ,GAAiC,EAAjC;AACA,eAAO,EAAP;AACD;;AACD,UAAMM,KAAK,GAAG,IAAIC,GAAJ,CAAgBH,IAAI,CAACI,KAAL,CAAWL,YAAY,CAACH,gBAAD,CAAvB,CAAhB,CAAd;AACA,UAAMa,MAAM,GAAGH,KAAK,CAACC,IAAN,CAAWL,KAAX,EAAkBQ,MAAlB,CACb,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,MAAL,CAAYd,aAAZ,MAA+B,CAAC,CAA1C;AAAA,OADa,CAAf;AAGA,aAAOW,MAAP;AACD;AACF;AAvBY,CAAf","sourcesContent":["const GIT_SEARCH_CACHE = \"gitSearchCache\";\n\nexport default {\n  writeTo: (searchRequest: string) => {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE])\n        localStorage[GIT_SEARCH_CACHE] = JSON.stringify(searchRequest);\n\n      const store = new Set<string>(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      store.add(searchRequest);\n      localStorage[GIT_SEARCH_CACHE] = JSON.stringify(Array.from(store));\n    }\n  },\n  searchIn: (searchRequest: string) => {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) {\n        localStorage[GIT_SEARCH_CACHE] = \"\";\n        return [];\n      }\n      const store = new Set<string>(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      const result = Array.from(store).filter(\n        (item) => item.search(searchRequest) !== -1\n      );\n      return result;\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}