{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/BetterMeTest/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage(_ref) {\n  var total_count = _ref.total_count,\n      repos = _ref.repos,\n      fetchSearch = _ref.fetchSearch;\n\n  var _useState = useState(1),\n      curPage = _useState[0],\n      setCurPage = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      curRequest = _useState2[0],\n      setCurRequest = _useState2[1];\n\n  var onSearch = function onSearch(request) {\n    setCurRequest(request);\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage\n    });\n    setCurPage(1);\n  };\n\n  var onPaginationClick = function onPaginationClick(value) {\n    if (value === \"Prev\") {\n      if (curPage !== 1) setCurPage(curPage - 1);\n    } else if (value === \"Next\") {\n      if (curPage !== Math.floor(total_count / 30)) setCurPage(curPage + 1);\n    } else if (curPage.toString !== value) {\n      setCurPage(Number(value));\n    }\n\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(function () {\n    fetchSearch({\n      q: curRequest,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage\n    });\n  }, [curPage]);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    onSearch: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), repos && __jsx(React.Fragment, null, __jsx(SearchResult, {\n    total_count: total_count,\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(Pagination, {\n    count: Math.floor(total_count / 30),\n    current: curPage,\n    onClick: onPaginationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))));\n}\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var repoSearchReducer = _ref2.repoSearchReducer;\n  return {\n    total_count: repoSearchReducer.total_count,\n    repos: repoSearchReducer.repos\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchSearch: searchReposActions.fetchSearch\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/pages/index.tsx"],"names":["React","useState","useEffect","connect","searchReposActions","Header","Pagination","SearchResult","HomePage","total_count","repos","fetchSearch","curPage","setCurPage","curRequest","setCurRequest","onSearch","request","q","sort","order","per_page","page","onPaginationClick","value","Math","floor","toString","Number","window","scrollTo","mapStateToProps","repoSearchReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage({ total_count, repos, fetchSearch }) {\n  const [curPage, setCurPage] = useState(1);\n  const [curRequest, setCurRequest] = useState(\"\");\n\n  const onSearch = (request: string) => {\n    setCurRequest(request);\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage,\n    });\n    setCurPage(1);\n  };\n\n  const onPaginationClick = (value) => {\n    if (value === \"Prev\") {\n      if (curPage !== 1) setCurPage(curPage - 1);\n    } else if (value === \"Next\") {\n      if (curPage !== Math.floor(total_count / 30)) setCurPage(curPage + 1);\n    } else if (curPage.toString !== value) {\n      setCurPage(Number(value));\n    }\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    fetchSearch({\n      q: curRequest,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage,\n    });\n  }, [curPage]);\n\n  return (\n    <>\n      <Header onSearch={onSearch} />\n      {repos && (\n        <>\n          <SearchResult total_count={total_count} repos={repos} />\n          <div className=\"content-center\">\n            <Pagination\n              count={Math.floor(total_count / 30)}\n              current={curPage}\n              onClick={onPaginationClick}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = ({ repoSearchReducer }) => ({\n  total_count: repoSearchReducer.total_count,\n  repos: repoSearchReducer.repos,\n});\nconst mapDispatchToProps = { fetchSearch: searchReposActions.fetchSearch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}