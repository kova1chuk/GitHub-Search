{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/BetterMeTest/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage(_ref) {\n  var total_count = _ref.total_count,\n      repos = _ref.repos,\n      fetchSearch = _ref.fetchSearch;\n\n  var _useState = useState(1),\n      curPage = _useState[0],\n      setCurPage = _useState[1];\n\n  var onSearch = function onSearch(request) {\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: 1\n    });\n  };\n\n  var onPaginationClick = function onPaginationClick(value) {};\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    onSearch: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), repos && __jsx(SearchResult, {\n    total_count: total_count,\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), __jsx(Pagination, {\n    count: total_count,\n    current: 1,\n    onClick: onPaginationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var repoSearchReducer = _ref2.repoSearchReducer;\n  return {\n    total_count: repoSearchReducer.total_count,\n    repos: repoSearchReducer.repos\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchSearch: searchReposActions.fetchSearch\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/pages/index.tsx"],"names":["React","useState","connect","searchReposActions","Header","Pagination","SearchResult","HomePage","total_count","repos","fetchSearch","curPage","setCurPage","onSearch","request","q","sort","order","per_page","page","onPaginationClick","value","mapStateToProps","repoSearchReducer","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,YAAnC;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,SAASC,QAAT,OAAuD;AAAA,MAAnCC,WAAmC,QAAnCA,WAAmC;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,kBACvBT,QAAQ,CAAC,CAAD,CADe;AAAA,MAC9CU,OAD8C;AAAA,MACrCC,UADqC;;AAErD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAqB;AACpCJ,IAAAA,WAAW,CAAC;AACVK,MAAAA,CAAC,EAAED,OADO;AAEVE,MAAAA,IAAI,EAAE,OAFI;AAGVC,MAAAA,KAAK,EAAE,MAHG;AAIVC,MAAAA,QAAQ,EAAE,EAJA;AAKVC,MAAAA,IAAI,EAAE;AALI,KAAD,CAAX;AAOD,GARD;;AASA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW,CAAE,CAAvC;;AACA,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAER,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,KAAK,IAAI,MAAC,YAAD;AAAc,IAAA,WAAW,EAAED,WAA3B;AAAwC,IAAA,KAAK,EAAEC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,EAGE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAED,WAAnB;AAAgC,IAAA,OAAO,EAAE,CAAzC;AAA4C,IAAA,OAAO,EAAEY,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,iBAAH,SAAGA,iBAAH;AAAA,SAA4B;AAClDf,IAAAA,WAAW,EAAEe,iBAAiB,CAACf,WADmB;AAElDC,IAAAA,KAAK,EAAEc,iBAAiB,CAACd;AAFyB,GAA5B;AAAA,CAAxB;;AAIA,IAAMe,kBAAkB,GAAG;AAAEd,EAAAA,WAAW,EAAEP,kBAAkB,CAACO;AAAlC,CAA3B;AAEA,eAAeR,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage({ total_count, repos, fetchSearch }) {\n  const [curPage, setCurPage] = useState(1);\n  const onSearch = (request: string) => {\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: 1,\n    });\n  };\n  const onPaginationClick = (value) => {};\n  return (\n    <>\n      <Header onSearch={onSearch} />\n      {repos && <SearchResult total_count={total_count} repos={repos} />}\n      <Pagination count={total_count} current={1} onClick={onPaginationClick} />\n    </>\n  );\n}\n\nconst mapStateToProps = ({ repoSearchReducer }) => ({\n  total_count: repoSearchReducer.total_count,\n  repos: repoSearchReducer.repos,\n});\nconst mapDispatchToProps = { fetchSearch: searchReposActions.fetchSearch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}