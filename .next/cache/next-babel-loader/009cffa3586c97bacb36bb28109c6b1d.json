{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/BetterMeTest/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage({\n  total_count,\n  repos,\n  fetchSearch\n}) {\n  const {\n    0: curPage,\n    1: setCurPage\n  } = useState(1);\n  const {\n    0: curRequest,\n    1: setCurRequest\n  } = useState(\"\");\n\n  const onSearch = request => {\n    setCurRequest(request);\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage\n    });\n  };\n\n  const onPaginationClick = value => {\n    if (value === \"Prev\") {} else if (value === \"Next\") {} else if (curPage.toString !== value) {\n      console.log(value);\n      setCurPage(Number(value));\n      fetchSearch({\n        q: curRequest,\n        sort: \"stars\",\n        order: \"desc\",\n        per_page: 30,\n        page: curPage\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    onSearch: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), repos && __jsx(SearchResult, {\n    total_count: total_count,\n    repos: repos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Pagination, {\n    count: total_count,\n    current: 1,\n    onClick: onPaginationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = ({\n  repoSearchReducer\n}) => ({\n  total_count: repoSearchReducer.total_count,\n  repos: repoSearchReducer.repos\n});\n\nconst mapDispatchToProps = {\n  fetchSearch: searchReposActions.fetchSearch\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/pages/index.tsx"],"names":["React","useState","connect","searchReposActions","Header","Pagination","SearchResult","HomePage","total_count","repos","fetchSearch","curPage","setCurPage","curRequest","setCurRequest","onSearch","request","q","sort","order","per_page","page","onPaginationClick","value","toString","console","log","Number","mapStateToProps","repoSearchReducer","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,YAAnC;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAlB,EAAuD;AACrD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMc,QAAQ,GAAIC,OAAD,IAAqB;AACpCF,IAAAA,aAAa,CAACE,OAAD,CAAb;AACAN,IAAAA,WAAW,CAAC;AACVO,MAAAA,CAAC,EAAED,OADO;AAEVE,MAAAA,IAAI,EAAE,OAFI;AAGVC,MAAAA,KAAK,EAAE,MAHG;AAIVC,MAAAA,QAAQ,EAAE,EAJA;AAKVC,MAAAA,IAAI,EAAEV;AALI,KAAD,CAAX;AAOD,GATD;;AAUA,QAAMW,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAIA,KAAK,KAAK,MAAd,EAAsB,CACrB,CADD,MACO,IAAIA,KAAK,KAAK,MAAd,EAAsB,CAC5B,CADM,MACA,IAAIZ,OAAO,CAACa,QAAR,KAAqBD,KAAzB,EAAgC;AACrCE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAX,MAAAA,UAAU,CAACe,MAAM,CAACJ,KAAD,CAAP,CAAV;AACAb,MAAAA,WAAW,CAAC;AACVO,QAAAA,CAAC,EAAEJ,UADO;AAEVK,QAAAA,IAAI,EAAE,OAFI;AAGVC,QAAAA,KAAK,EAAE,MAHG;AAIVC,QAAAA,QAAQ,EAAE,EAJA;AAKVC,QAAAA,IAAI,EAAEV;AALI,OAAD,CAAX;AAOD;AACF,GAdD;;AAeA,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEI,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,KAAK,IAAI,MAAC,YAAD;AAAc,IAAA,WAAW,EAAED,WAA3B;AAAwC,IAAA,KAAK,EAAEC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,EAGE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAED,WAAnB;AAAgC,IAAA,OAAO,EAAE,CAAzC;AAA4C,IAAA,OAAO,EAAEc,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAA4B;AAClDrB,EAAAA,WAAW,EAAEqB,iBAAiB,CAACrB,WADmB;AAElDC,EAAAA,KAAK,EAAEoB,iBAAiB,CAACpB;AAFyB,CAA5B,CAAxB;;AAIA,MAAMqB,kBAAkB,GAAG;AAAEpB,EAAAA,WAAW,EAAEP,kBAAkB,CAACO;AAAlC,CAA3B;AAEA,eAAeR,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,QAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage({ total_count, repos, fetchSearch }) {\n  const [curPage, setCurPage] = useState(1);\n  const [curRequest, setCurRequest] = useState(\"\");\n  const onSearch = (request: string) => {\n    setCurRequest(request);\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage,\n    });\n  };\n  const onPaginationClick = (value) => {\n    if (value === \"Prev\") {\n    } else if (value === \"Next\") {\n    } else if (curPage.toString !== value) {\n      console.log(value);\n      setCurPage(Number(value));\n      fetchSearch({\n        q: curRequest,\n        sort: \"stars\",\n        order: \"desc\",\n        per_page: 30,\n        page: curPage,\n      });\n    }\n  };\n  return (\n    <>\n      <Header onSearch={onSearch} />\n      {repos && <SearchResult total_count={total_count} repos={repos} />}\n      <Pagination count={total_count} current={1} onClick={onPaginationClick} />\n    </>\n  );\n}\n\nconst mapStateToProps = ({ repoSearchReducer }) => ({\n  total_count: repoSearchReducer.total_count,\n  repos: repoSearchReducer.repos,\n});\nconst mapDispatchToProps = { fetchSearch: searchReposActions.fetchSearch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"]},"metadata":{},"sourceType":"module"}