{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/BetterMeTest/containers/Autocomplete.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { AutocompleteItem } from \"components\";\n\nconst Autocomplete = ({\n  searchCache,\n  search,\n  onSearch\n}) => {\n  console.log(searchCache);\n  return __jsx(\"div\", {\n    className: \"autocomplete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, searchCache.length !== 0 ? searchCache.map((item, index) => __jsx(AutocompleteItem, {\n    onClick: onSearch,\n    key: index,\n    search: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  })) : __jsx(AutocompleteItem, {\n    search: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Autocomplete;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/containers/Autocomplete.tsx"],"names":["AutocompleteItem","Autocomplete","searchCache","search","onSearch","console","log","length","map","item","index"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,YAIJ,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,CAACK,MAAZ,KAAuB,CAAvB,GACCL,WAAW,CAACM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KACd,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,QAA3B;AAAqC,IAAA,GAAG,EAAEM,KAA1C;AAAiD,IAAA,MAAM,EAAED,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC,MAAC,gBAAD;AAAkB,IAAA,MAAM,EAAC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF;AAWD,CAjBD;;AAmBA,eAAeR,YAAf","sourcesContent":["import { AutocompleteItem } from \"components\";\n\nconst Autocomplete: React.FC<{\n  searchCache: string[];\n  search: string;\n  onSearch: Function;\n}> = ({ searchCache, search, onSearch }) => {\n  console.log(searchCache);\n  return (\n    <div className=\"autocomplete\">\n      {searchCache.length !== 0 ? (\n        searchCache.map((item, index) => (\n          <AutocompleteItem onClick={onSearch} key={index} search={item} />\n        ))\n      ) : (\n        <AutocompleteItem search=\"\" />\n      )}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}