{"ast":null,"code":"const GIT_SEARCH_CACHE = \"gitSearchCache\";\nexport default {\n  writeTo: searchRequest => {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) localStorage[GIT_SEARCH_CACHE] = \"\";\n      const store = new Set(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      store.add(searchRequest);\n      localStorage[GIT_SEARCH_CACHE] = JSON.stringify(Array.from(store));\n    }\n  },\n  searchIn: searchRequest => {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) {\n        localStorage[GIT_SEARCH_CACHE] = \"\";\n        return [];\n      }\n\n      const store = new Set(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      const result = Array.from(store).filter(item => item.search(searchRequest) !== -1);\n      return result;\n    }\n  }\n};","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/utils/searchCache.ts"],"names":["GIT_SEARCH_CACHE","writeTo","searchRequest","localStorage","store","Set","JSON","parse","add","stringify","Array","from","searchIn","result","filter","item","search"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,gBAAzB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAGC,aAAD,IAA2B;AAClC,QAAIC,YAAJ,EAAkB;AAChB,UAAI,CAACA,YAAY,CAACH,gBAAD,CAAjB,EAAqCG,YAAY,CAACH,gBAAD,CAAZ,GAAiC,EAAjC;AAErC,YAAMI,KAAK,GAAG,IAAIC,GAAJ,CAAgBC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACH,gBAAD,CAAvB,CAAhB,CAAd;AACAI,MAAAA,KAAK,CAACI,GAAN,CAAUN,aAAV;AACAC,MAAAA,YAAY,CAACH,gBAAD,CAAZ,GAAiCM,IAAI,CAACG,SAAL,CAAeC,KAAK,CAACC,IAAN,CAAWP,KAAX,CAAf,CAAjC;AACD;AACF,GATY;AAUbQ,EAAAA,QAAQ,EAAGV,aAAD,IAA2B;AACnC,QAAIC,YAAJ,EAAkB;AAChB,UAAI,CAACA,YAAY,CAACH,gBAAD,CAAjB,EAAqC;AACnCG,QAAAA,YAAY,CAACH,gBAAD,CAAZ,GAAiC,EAAjC;AACA,eAAO,EAAP;AACD;;AACD,YAAMI,KAAK,GAAG,IAAIC,GAAJ,CAAgBC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACH,gBAAD,CAAvB,CAAhB,CAAd;AACA,YAAMa,MAAM,GAAGH,KAAK,CAACC,IAAN,CAAWP,KAAX,EAAkBU,MAAlB,CACZC,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAYd,aAAZ,MAA+B,CAAC,CAD7B,CAAf;AAGA,aAAOW,MAAP;AACD;AACF;AAtBY,CAAf","sourcesContent":["const GIT_SEARCH_CACHE = \"gitSearchCache\";\n\nexport default {\n  writeTo: (searchRequest: string) => {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) localStorage[GIT_SEARCH_CACHE] = \"\";\n\n      const store = new Set<string>(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      store.add(searchRequest);\n      localStorage[GIT_SEARCH_CACHE] = JSON.stringify(Array.from(store));\n    }\n  },\n  searchIn: (searchRequest: string) => {\n    if (localStorage) {\n      if (!localStorage[GIT_SEARCH_CACHE]) {\n        localStorage[GIT_SEARCH_CACHE] = \"\";\n        return [];\n      }\n      const store = new Set<string>(JSON.parse(localStorage[GIT_SEARCH_CACHE]));\n      const result = Array.from(store).filter(\n        (item) => item.search(searchRequest) !== -1\n      );\n      return result;\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}