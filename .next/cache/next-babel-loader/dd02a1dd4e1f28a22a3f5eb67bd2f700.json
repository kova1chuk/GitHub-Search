{"ast":null,"code":"var kFormatter = function kFormatter(num, fixed) {\n  return Math.abs(num) > 999 ? String(Math.sign(num) * Number((Math.abs(num) / 1000).toFixed(fixed))) + \"k\" : String(Math.sign(num) * Math.abs(num));\n};\n\nexport default kFormatter;","map":{"version":3,"sources":["/home/oleksii/Documents/bettermetest/utils/kFormatter.ts"],"names":["kFormatter","num","fixed","Math","abs","String","sign","Number","toFixed"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAcC,KAAd,EAAwC;AACzD,SAAOC,IAAI,CAACC,GAAL,CAASH,GAAT,IAAgB,GAAhB,GACHI,MAAM,CAACF,IAAI,CAACG,IAAL,CAAUL,GAAV,IAAiBM,MAAM,CAAC,CAACJ,IAAI,CAACC,GAAL,CAASH,GAAT,IAAgB,IAAjB,EAAuBO,OAAvB,CAA+BN,KAA/B,CAAD,CAAxB,CAAN,GACE,GAFC,GAGHG,MAAM,CAACF,IAAI,CAACG,IAAL,CAAUL,GAAV,IAAiBE,IAAI,CAACC,GAAL,CAASH,GAAT,CAAlB,CAHV;AAID,CALD;;AAMA,eAAeD,UAAf","sourcesContent":["const kFormatter = (num: number, fixed: number): string => {\n  return Math.abs(num) > 999\n    ? String(Math.sign(num) * Number((Math.abs(num) / 1000).toFixed(fixed))) +\n        \"k\"\n    : String(Math.sign(num) * Math.abs(num));\n};\nexport default kFormatter;\n"]},"metadata":{},"sourceType":"module"}