{"ast":null,"code":"import { SET_SEARCH_RESULT } from \"./types\";\nimport { gitApi } from \"utils/api\";\nconst Actions = {\n  setSearchResult: searchResult => {\n    return {\n      type: SET_SEARCH_RESULT,\n      payload: searchResult\n    };\n  },\n  fetchSearch: async searchQuery => {\n    const res = await gitApi.searchRepository(searchQuery);\n  }\n};\nexport default Actions;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/store/repoSearch/actions.ts"],"names":["SET_SEARCH_RESULT","gitApi","Actions","setSearchResult","searchResult","type","payload","fetchSearch","searchQuery","res","searchRepository"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,SAAlC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAGC,YAAD,IAAqC;AACpD,WAAO;AACLC,MAAAA,IAAI,EAAEL,iBADD;AAELM,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID,GANa;AAOdG,EAAAA,WAAW,EAAE,MAAOC,WAAP,IAA0C;AACrD,UAAMC,GAAG,GAAG,MAAMR,MAAM,CAACS,gBAAP,CAAwBF,WAAxB,CAAlB;AACD;AATa,CAAhB;AAYA,eAAeN,OAAf","sourcesContent":["import { SET_SEARCH_RESULT } from \"./types\";\nimport { IRepositoryItem, ISearchRepository } from \"interfaces\";\nimport { gitApi } from \"utils/api\";\n\nconst Actions = {\n  setSearchResult: (searchResult: IRepositoryItem[]) => {\n    return {\n      type: SET_SEARCH_RESULT,\n      payload: searchResult,\n    };\n  },\n  fetchSearch: async (searchQuery: ISearchRepository) => {\n    const res = await gitApi.searchRepository(searchQuery);\n  },\n};\n\nexport default Actions;\n"]},"metadata":{},"sourceType":"module"}