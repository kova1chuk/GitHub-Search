{"ast":null,"code":"import { getRequestParser } from \"utils\";\nimport { axiosGitApi as axios } from \"core\";\nexport default {\n  searchRepository: (searchRequest = {}) => {\n    axios.get(`/search/repositories${getRequestParser(searchRequest)}`).then(response => {\n      console.log(\"response.status\", response.status);\n\n      if (response.status !== 200) {} //bad news\n      // const { total_count, incomplete_results, items } = response.data;\n      // console.log(\n      //   items.map((item) => {\n      //     const {\n      //       full_name,\n      //       html_url,\n      //       description,\n      //       stargazers_count,\n      //       language,\n      //       license,\n      //       updated_at,\n      //     } = item;\n      //     return {\n      //       full_name,\n      //       html_url,\n      //       description,\n      //       stargazers_count,\n      //       language,\n      //       license: license.name,\n      //       updated_at,\n      //     };\n      //   })\n      // );\n\n    });\n  }\n}; // name\n// discription\n// topics\n// stars\n// labguage\n// license\n// updated\n// issues needs help","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/utils/api/git.ts"],"names":["getRequestParser","axiosGitApi","axios","searchRepository","searchRequest","get","then","response","console","log","status"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,OAAjC;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,MAArC;AAGA,eAAe;AACbC,EAAAA,gBAAgB,EAAE,CAACC,aAAgC,GAAG,EAApC,KAA2C;AAC3DF,IAAAA,KAAK,CACFG,GADH,CACQ,uBAAsBL,gBAAgB,CAACI,aAAD,CAAgB,EAD9D,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAAQ,CAACG,MAAxC;;AACA,UAAIH,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B,CAE5B,CAFD,CACE;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KA9BH;AA+BD;AAjCY,CAAf,C,CAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getRequestParser } from \"utils\";\nimport { axiosGitApi as axios } from \"core\";\nimport { ISearchRepository } from \"interfaces\";\n\nexport default {\n  searchRepository: (searchRequest: ISearchRepository = {}) => {\n    axios\n      .get(`/search/repositories${getRequestParser(searchRequest)}`)\n      .then((response) => {\n        console.log(\"response.status\", response.status);\n        if (response.status !== 200) {\n          //bad news\n        }\n        // const { total_count, incomplete_results, items } = response.data;\n        // console.log(\n        //   items.map((item) => {\n        //     const {\n        //       full_name,\n        //       html_url,\n        //       description,\n        //       stargazers_count,\n        //       language,\n        //       license,\n        //       updated_at,\n        //     } = item;\n        //     return {\n        //       full_name,\n        //       html_url,\n        //       description,\n        //       stargazers_count,\n        //       language,\n        //       license: license.name,\n        //       updated_at,\n        //     };\n        //   })\n        // );\n      });\n  },\n};\n\n// name\n// discription\n// topics\n// stars\n// labguage\n// license\n// updated\n// issues needs help\n"]},"metadata":{},"sourceType":"module"}