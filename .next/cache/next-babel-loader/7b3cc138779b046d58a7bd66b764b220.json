{"ast":null,"code":"import { getRequestParser } from \"utils\";\nimport { axiosGitApi as axios } from \"core\";\nexport default {\n  searchRepository: (searchRequest = {}) => {\n    axios.get(`/search/repositories${getRequestParser(searchRequest)}`).then(response => {\n      const {\n        total_count,\n        incomplete_results,\n        items\n      } = response.data;\n      console.log(items.map(item => {\n        const {\n          full_name,\n          html_url,\n          description,\n          stargazers_count,\n          language,\n          license,\n          updated_at\n        } = item;\n        return {\n          full_name,\n          html_url,\n          description,\n          stargazers_count,\n          language,\n          license,\n          updated_at\n        };\n      }));\n    });\n  }\n}; // name\n// discription\n// topics\n// stars\n// labguage\n// license\n// updated\n// issues needs help","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/utils/api/git.ts"],"names":["getRequestParser","axiosGitApi","axios","searchRepository","searchRequest","get","then","response","total_count","incomplete_results","items","data","console","log","map","item","full_name","html_url","description","stargazers_count","language","license","updated_at"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,OAAjC;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,MAArC;AAGA,eAAe;AACbC,EAAAA,gBAAgB,EAAE,CAACC,aAAgC,GAAG,EAApC,KAA2C;AAC3DF,IAAAA,KAAK,CACFG,GADH,CACQ,uBAAsBL,gBAAgB,CAACI,aAAD,CAAgB,EAD9D,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,kBAAf;AAAmCC,QAAAA;AAAnC,UAA6CH,QAAQ,CAACI,IAA5D;AACAC,MAAAA,OAAO,CAACC,GAAR,CACEH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AAClB,cAAM;AACJC,UAAAA,SADI;AAEJC,UAAAA,QAFI;AAGJC,UAAAA,WAHI;AAIJC,UAAAA,gBAJI;AAKJC,UAAAA,QALI;AAMJC,UAAAA,OANI;AAOJC,UAAAA;AAPI,YAQFP,IARJ;AASA,eAAO;AACLC,UAAAA,SADK;AAELC,UAAAA,QAFK;AAGLC,UAAAA,WAHK;AAILC,UAAAA,gBAJK;AAKLC,UAAAA,QALK;AAMLC,UAAAA,OANK;AAOLC,UAAAA;AAPK,SAAP;AASD,OAnBD,CADF;AAsBD,KA1BH;AA2BD;AA7BY,CAAf,C,CAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getRequestParser } from \"utils\";\nimport { axiosGitApi as axios } from \"core\";\nimport { ISearchRepository } from \"interfaces\";\n\nexport default {\n  searchRepository: (searchRequest: ISearchRepository = {}) => {\n    axios\n      .get(`/search/repositories${getRequestParser(searchRequest)}`)\n      .then((response) => {\n        const { total_count, incomplete_results, items } = response.data;\n        console.log(\n          items.map((item) => {\n            const {\n              full_name,\n              html_url,\n              description,\n              stargazers_count,\n              language,\n              license,\n              updated_at,\n            } = item;\n            return {\n              full_name,\n              html_url,\n              description,\n              stargazers_count,\n              language,\n              license,\n              updated_at,\n            };\n          })\n        );\n      });\n  },\n};\n\n// name\n// discription\n// topics\n// stars\n// labguage\n// license\n// updated\n// issues needs help\n"]},"metadata":{},"sourceType":"module"}