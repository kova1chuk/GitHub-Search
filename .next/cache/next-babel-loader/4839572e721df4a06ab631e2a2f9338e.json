{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/oleksii/Documents/Programming/BetterMeTest/components/Search.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { searchCache } from \"utils\";\nimport Autocomplete from \"containers/Autocomplete\";\n\nvar Search = function Search(_ref) {\n  var _onSearch = _ref.onSearch;\n\n  var _useState = useState(false),\n      inputFocused = _useState[0],\n      setInputFocused = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      searchCacheValue = _useState3[0],\n      setSearchCacheValue = _useState3[1];\n\n  var onInputFocus = function onInputFocus() {\n    setInputFocused(true);\n    setSearchCacheValue(searchCache.searchIn(inputValue));\n  };\n\n  var onInputBlur = function onInputBlur() {\n    setInputFocused(false);\n  };\n\n  var onInputChange = function onInputChange(event) {\n    setSearchCacheValue(searchCache.searchIn(inputValue));\n    setInputValue(event.target.value);\n  };\n\n  var onEnter = function onEnter(event) {\n    if (event.key === \"Enter\") {\n      _onSearch(event.target.value);\n\n      searchCache.writeTo(event.target.value);\n      event.target.blur();\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classNames(\"search__input\", {\n      \"search__input--focus\": inputFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Search or jump to...\",\n    onFocus: onInputFocus,\n    onBlur: onInputBlur,\n    onKeyDown: onEnter,\n    onChange: onInputChange,\n    value: inputValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    src: \"https://github.githubassets.com/images/search-key-slash.svg\",\n    alt: \"Search icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"search__autocomplete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, inputFocused && // <div className=\"autocomplete\">\n  //   <AutocompleteItem\n  //     searchCache={searchCacheValue}\n  //     search={inputValue}\n  //   />\n  // </div>\n  __jsx(Autocomplete, {\n    onSearch: function onSearch(value) {\n      setInputValue(value);\n\n      _onSearch(value);\n    },\n    searchCache: searchCacheValue,\n    search: inputValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/components/Search.tsx"],"names":["React","useState","classNames","searchCache","Autocomplete","Search","onSearch","inputFocused","setInputFocused","inputValue","setInputValue","searchCacheValue","setSearchCacheValue","onInputFocus","searchIn","onInputBlur","onInputChange","event","target","value","onEnter","key","writeTo","blur"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAkB;AAAA,MAAfC,SAAe,QAAfA,QAAe;;AAAA,kBACSL,QAAQ,CAAC,KAAD,CADjB;AAAA,MACxBM,YADwB;AAAA,MACVC,eADU;;AAAA,mBAEKP,QAAQ,CAAC,EAAD,CAFb;AAAA,MAExBQ,UAFwB;AAAA,MAEZC,aAFY;;AAAA,mBAGiBT,QAAQ,CAAC,EAAD,CAHzB;AAAA,MAGxBU,gBAHwB;AAAA,MAGNC,mBAHM;;AAI/B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,IAAAA,mBAAmB,CAACT,WAAW,CAACW,QAAZ,CAAqBL,UAArB,CAAD,CAAnB;AACD,GAHD;;AAIA,MAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBP,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAGA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BL,IAAAA,mBAAmB,CAACT,WAAW,CAACW,QAAZ,CAAqBL,UAArB,CAAD,CAAnB;AACAC,IAAAA,aAAa,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAHD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACH,KAAD,EAAW;AACzB,QAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;AACzBf,MAAAA,SAAQ,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;;AACAhB,MAAAA,WAAW,CAACmB,OAAZ,CAAoBL,KAAK,CAACC,MAAN,CAAaC,KAAjC;AACAF,MAAAA,KAAK,CAACC,MAAN,CAAaK,IAAb;AACD;AACF,GAND;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAErB,UAAU,CAAC,eAAD,EAAkB;AACrC,8BAAwBK;AADa,KAAlB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,sBAFd;AAGE,IAAA,OAAO,EAAEM,YAHX;AAIE,IAAA,MAAM,EAAEE,WAJV;AAKE,IAAA,SAAS,EAAEK,OALb;AAME,IAAA,QAAQ,EAAEJ,aANZ;AAOE,IAAA,KAAK,EAAEP,UAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAeE;AACE,IAAA,GAAG,EAAC,6DADN;AAEE,IAAA,GAAG,EAAC,aAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,EAqBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,IACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAC,YAAD;AACE,IAAA,QAAQ,EAAE,kBAACY,KAAD,EAAW;AACnBT,MAAAA,aAAa,CAACS,KAAD,CAAb;;AACAb,MAAAA,SAAQ,CAACa,KAAD,CAAR;AACD,KAJH;AAKE,IAAA,WAAW,EAAER,gBALf;AAME,IAAA,MAAM,EAAEF,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CArBF,CADF;AA0CD,CAhED;;AAkEA,eAAeJ,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { searchCache } from \"utils\";\nimport Autocomplete from \"containers/Autocomplete\";\n\nconst Search = ({ onSearch }) => {\n  const [inputFocused, setInputFocused] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [searchCacheValue, setSearchCacheValue] = useState([]);\n  const onInputFocus = () => {\n    setInputFocused(true);\n    setSearchCacheValue(searchCache.searchIn(inputValue));\n  };\n  const onInputBlur = () => {\n    setInputFocused(false);\n  };\n  const onInputChange = (event) => {\n    setSearchCacheValue(searchCache.searchIn(inputValue));\n    setInputValue(event.target.value);\n  };\n  const onEnter = (event) => {\n    if (event.key === \"Enter\") {\n      onSearch(event.target.value);\n      searchCache.writeTo(event.target.value);\n      event.target.blur();\n    }\n  };\n  return (\n    <div className=\"search\">\n      <div\n        className={classNames(\"search__input\", {\n          \"search__input--focus\": inputFocused,\n        })}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search or jump to...\"\n          onFocus={onInputFocus}\n          onBlur={onInputBlur}\n          onKeyDown={onEnter}\n          onChange={onInputChange}\n          value={inputValue}\n        />\n\n        <img\n          src=\"https://github.githubassets.com/images/search-key-slash.svg\"\n          alt=\"Search icon\"\n        />\n      </div>\n      <div className=\"search__autocomplete\">\n        {inputFocused && (\n          // <div className=\"autocomplete\">\n          //   <AutocompleteItem\n          //     searchCache={searchCacheValue}\n          //     search={inputValue}\n          //   />\n          // </div>\n          <Autocomplete\n            onSearch={(value) => {\n              setInputValue(value);\n              onSearch(value);\n            }}\n            searchCache={searchCacheValue}\n            search={inputValue}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}