{"ast":null,"code":"import { getRequestParser } from \"utils\";\nimport { axiosGitApi as axios } from \"core\";\nexport default {\n  searchRepository: function searchRepository() {\n    var searchRequest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    axios.get(\"/search/repositories\".concat(getRequestParser(searchRequest))).then(function (response) {\n      var _response$data = response.data,\n          total_count = _response$data.total_count,\n          incomplete_results = _response$data.incomplete_results,\n          items = _response$data.items;\n      console.log(items.map(function (item) {\n        var full_name = item.full_name,\n            html_url = item.html_url,\n            description = item.description,\n            stargazers_count = item.stargazers_count,\n            language = item.language,\n            license = item.license,\n            updated_at = item.updated_at;\n        return {\n          full_name: full_name,\n          html_url: html_url,\n          description: description,\n          stargazers_count: stargazers_count,\n          language: language,\n          license: license,\n          updated_at: updated_at\n        };\n      }));\n    });\n  }\n}; // name\n// discription\n// topics\n// stars\n// labguage\n// license\n// updated\n// issues needs help","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/BetterMeTest/utils/api/git.ts"],"names":["getRequestParser","axiosGitApi","axios","searchRepository","searchRequest","get","then","response","data","total_count","incomplete_results","items","console","log","map","item","full_name","html_url","description","stargazers_count","language","license","updated_at"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,OAAjC;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,MAArC;AAGA,eAAe;AACbC,EAAAA,gBAAgB,EAAE,4BAA2C;AAAA,QAA1CC,aAA0C,uEAAP,EAAO;AAC3DF,IAAAA,KAAK,CACFG,GADH,+BAC8BL,gBAAgB,CAACI,aAAD,CAD9C,GAEGE,IAFH,CAEQ,UAACC,QAAD,EAAc;AAAA,2BACiCA,QAAQ,CAACC,IAD1C;AAAA,UACVC,WADU,kBACVA,WADU;AAAA,UACGC,kBADH,kBACGA,kBADH;AAAA,UACuBC,KADvB,kBACuBA,KADvB;AAElBC,MAAAA,OAAO,CAACC,GAAR,CACEF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAU;AAAA,YAEhBC,SAFgB,GASdD,IATc,CAEhBC,SAFgB;AAAA,YAGhBC,QAHgB,GASdF,IATc,CAGhBE,QAHgB;AAAA,YAIhBC,WAJgB,GASdH,IATc,CAIhBG,WAJgB;AAAA,YAKhBC,gBALgB,GASdJ,IATc,CAKhBI,gBALgB;AAAA,YAMhBC,QANgB,GASdL,IATc,CAMhBK,QANgB;AAAA,YAOhBC,OAPgB,GASdN,IATc,CAOhBM,OAPgB;AAAA,YAQhBC,UARgB,GASdP,IATc,CAQhBO,UARgB;AAUlB,eAAO;AACLN,UAAAA,SAAS,EAATA,SADK;AAELC,UAAAA,QAAQ,EAARA,QAFK;AAGLC,UAAAA,WAAW,EAAXA,WAHK;AAILC,UAAAA,gBAAgB,EAAhBA,gBAJK;AAKLC,UAAAA,QAAQ,EAARA,QALK;AAMLC,UAAAA,OAAO,EAAPA,OANK;AAOLC,UAAAA,UAAU,EAAVA;AAPK,SAAP;AASD,OAnBD,CADF;AAsBD,KA1BH;AA2BD;AA7BY,CAAf,C,CAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getRequestParser } from \"utils\";\nimport { axiosGitApi as axios } from \"core\";\nimport { ISearchRepository } from \"interfaces\";\n\nexport default {\n  searchRepository: (searchRequest: ISearchRepository = {}) => {\n    axios\n      .get(`/search/repositories${getRequestParser(searchRequest)}`)\n      .then((response) => {\n        const { total_count, incomplete_results, items } = response.data;\n        console.log(\n          items.map((item) => {\n            const {\n              full_name,\n              html_url,\n              description,\n              stargazers_count,\n              language,\n              license,\n              updated_at,\n            } = item;\n            return {\n              full_name,\n              html_url,\n              description,\n              stargazers_count,\n              language,\n              license,\n              updated_at,\n            };\n          })\n        );\n      });\n  },\n};\n\n// name\n// discription\n// topics\n// stars\n// labguage\n// license\n// updated\n// issues needs help\n"]},"metadata":{},"sourceType":"module"}