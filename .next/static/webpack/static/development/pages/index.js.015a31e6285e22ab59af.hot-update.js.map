{"version":3,"file":"static/webpack/static/development/pages/index.js.015a31e6285e22ab59af.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport searchReposActions from \"store/repoSearch/actions\";\nimport { Header, Pagination } from \"components\";\nimport { SearchResult } from \"containers\";\n\nfunction HomePage({ total_count, repos, fetchSearch }) {\n  const [curPage, setCurPage] = useState(1);\n  const [curRequest, setCurRequest] = useState(\"\");\n  const onSearch = (request: string) => {\n    setCurRequest(request);\n    fetchSearch({\n      q: request,\n      sort: \"stars\",\n      order: \"desc\",\n      per_page: 30,\n      page: curPage,\n    });\n  };\n  const onPaginationClick = (value) => {\n    if (value === \"Prev\") {\n    } else if (value === \"Next\") {\n    } else if (curPage.toString !== value) {\n      setCurPage(Number(value));\n    }\n  };\n  return (\n    <>\n      <Header onSearch={onSearch} />\n      {repos && <SearchResult total_count={total_count} repos={repos} />}\n      <Pagination count={total_count} current={1} onClick={onPaginationClick} />\n    </>\n  );\n}\n\nconst mapStateToProps = ({ repoSearchReducer }) => ({\n  total_count: repoSearchReducer.total_count,\n  repos: repoSearchReducer.repos,\n});\nconst mapDispatchToProps = { fetchSearch: searchReposActions.fetchSearch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AAAA;AAAA;AAEA;;;;A","sourceRoot":""}